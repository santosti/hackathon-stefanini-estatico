{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://angular-bootstrap-toasts/lib/Models/toast-message.models.ts","ng://angular-bootstrap-toasts/lib/angular-bootstrap-toasts.service.ts","ng://angular-bootstrap-toasts/lib/Components/toasts-container/toasts-container.component.ts","ng://angular-bootstrap-toasts/lib/Components/toast-message/toast-message.component.ts","ng://angular-bootstrap-toasts/lib/angular-bootstrap-toasts.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","ToastMessage","params","systemParams","this","confirmationResult","Subject","id","type","text","title","moment","duration","isProgressLineEnabled","showProgressLine","isDurationPausedByMouse","pauseDurationOnMouseEnter","isClosableByMouseClick","closeByClick","iconClass","progressLineClass","titleClass","bodyClass","toastClass","toolbarClass","closeButtonClass","toolbarItems","Object","defineProperty","prototype","asObservable","Close","confirmationStatus","AngularBootstrapToastsService","toastsList","BehaviorSubject","defaultTitle","defaultText","defaultDuration","minDuration","maxMessageId","showSimpleToast","createToast","showConfirmToast","changeDefaultTitle","newTitle","validTitle","validateTitle","changeDefaultText","newText","validText","validateText","changeDefaultDuration","validateDuration","_this","messages","getValue","validParams","validateParams","toast","toastSubscription","ConfirmationResult$","subscribe","actualMessages","_b","__values","length","tslib_1.__values","entries","_c","_d","index","Id","splice","unsubscribe","newParams","err","DefaultTitle","DefaultText","DefaultDuration","Error","durationAsNumber","isNaN","Injectable","ToastsContainerComponent","toastsService","Placement","position","Width","Classes","defaultMargin","MarginAsString","ngOnInit","messagesListSubscription","ToastsList$","toasts","initParams","ngOnDestroy","marginTop","marginBottom","marginLeft","marginRight","Component","args","selector","template","animations","trigger","transition","style","transform","opacity","animate","Input","ToastMessageComponent","progressLineWidth","msInterval","isMouseFocused","currentDuration","Toast","Duration","durationTimer","interval","pipe","filter","tap","IsProgressLineEnabled","toFixed","animationPause","animationPlay","onClick","IsClosableByMouseClick","remove","AngularBootstrapToastsModule","NgModule","declarations","imports","BrowserModule","BrowserAnimationsModule","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Subject, Observable } from 'rxjs';\r\n\r\nexport class ToastMessage {\r\n    private confirmationResult: Subject<boolean> = new Subject<boolean>();\r\n    public get ConfirmationResult$ (): Observable<boolean> {\r\n        return this.confirmationResult.asObservable();\r\n    }\r\n\r\n    private id: number;\r\n    public get Id (): number {\r\n        return this.id;\r\n    }\r\n\r\n    private type: ToastType;\r\n    public get Type (): ToastType {\r\n        return this.type;\r\n    }\r\n\r\n    private title: string;\r\n    public get Title (): string {\r\n        return this.title;\r\n    }\r\n\r\n    private text: string;\r\n    public get Text (): string {\r\n        return this.text;\r\n    }\r\n\r\n    private moment: string;\r\n    public get Moment (): string {\r\n        return this.moment;\r\n    }\r\n\r\n    private duration: number;\r\n    public get Duration (): number {\r\n        return this.duration;\r\n    }\r\n\r\n    private toolbarItems: ToastToolbarItems;\r\n    public get ToolbarItems (): ToastToolbarItems {\r\n        return this.toolbarItems;\r\n    }\r\n\r\n    private isProgressLineEnabled: boolean;\r\n    public get IsProgressLineEnabled (): boolean {\r\n        return this.isProgressLineEnabled;\r\n    }\r\n\r\n    private isDurationPausedByMouse: boolean;\r\n    public get IsDurationPausedByMouse (): boolean {\r\n        return this.isDurationPausedByMouse;\r\n    }\r\n\r\n    private isClosableByMouseClick: boolean;\r\n    public get IsClosableByMouseClick (): boolean {\r\n        return this.isClosableByMouseClick;\r\n    }\r\n\r\n    private iconClass: string;\r\n    public get IconClass (): string {\r\n        return this.iconClass;\r\n    }\r\n\r\n    private closeButtonClass: string;\r\n    public get CloseButtonClass (): string {\r\n        return this.closeButtonClass;\r\n    }\r\n\r\n    private progressLineClass: string;\r\n    public get ProgressLineClass (): string {\r\n        return this.progressLineClass;\r\n    }\r\n\r\n    private titleClass: string;\r\n    public get TitleClass (): string {\r\n        return this.titleClass;\r\n    }\r\n\r\n    private bodyClass: string;\r\n    public get BodyClass (): string {\r\n        return this.bodyClass;\r\n    }\r\n\r\n    private toolbarClass: string;\r\n    public get ToolbarClass (): string {\r\n        return this.toolbarClass;\r\n    }\r\n\r\n    private toastClass: string;\r\n    public get ToastClass (): string {\r\n        return this.toastClass;\r\n    }\r\n\r\n    public Close (confirmationStatus?: boolean) {\r\n        this.confirmationResult.next(confirmationStatus || false);\r\n    }\r\n\r\n    constructor (\r\n        params: ToastMessageParams,\r\n        systemParams: SystemToastParams\r\n    ) {\r\n        this.id                      = systemParams.id;\r\n        this.type                    = systemParams.type;\r\n        this.text                    = params.text;\r\n        this.title                   = params.title;\r\n        this.moment                  = params.moment;\r\n        this.duration                = params.duration;\r\n        this.isProgressLineEnabled   = params.showProgressLine;\r\n        this.isDurationPausedByMouse = params.pauseDurationOnMouseEnter;\r\n        this.isClosableByMouseClick  = params.closeByClick;\r\n        this.iconClass               = params.iconClass;\r\n        this.progressLineClass       = params.progressLineClass;\r\n        this.titleClass              = params.titleClass;\r\n        this.bodyClass               = params.bodyClass;\r\n        this.toastClass              = params.toastClass;\r\n        this.toolbarClass            = params.toolbarClass;\r\n        this.closeButtonClass        = params.closeButtonClass;\r\n        this.toolbarItems            = params.toolbarItems;\r\n    }\r\n}\r\n\r\nexport class ToastMessageParams {\r\n    text?: string;\r\n\r\n    title?: string;\r\n\r\n    /** Great property to show time/date or something like this (short info near title) */\r\n    moment?: string;\r\n\r\n    /** Time in milliseconds over which will be displayed toast  */\r\n    duration?: number;\r\n\r\n    /** Is toast will have progress line of duration time? */\r\n    showProgressLine?: boolean;\r\n\r\n    /** Is toast will closable by mouse click on toast block */\r\n    closeByClick?: boolean;\r\n\r\n    /** Is toast duration needs to be paused when mouse enter on toast block? */\r\n    pauseDurationOnMouseEnter?: boolean;\r\n\r\n    /** Class of progress line */\r\n    progressLineClass?: string;\r\n\r\n    /** Class of icon for title\r\n     * For example: `fas fa-heart` (FontAwesome)\r\n     * You can also add color class, ex: `fas fa-heart text-success` (Bootstrap color class)\r\n     */\r\n    iconClass?: string;\r\n\r\n    /** Class for title block of toast */\r\n    titleClass?: string;\r\n\r\n    /** Class for body block of toast */\r\n    bodyClass?: string;\r\n\r\n    /** Class for block of toast */\r\n    toastClass?: string;\r\n\r\n    /** Class for toolbar block */\r\n    toolbarClass?: string;\r\n\r\n    /** Class for close button */\r\n    closeButtonClass?: string;\r\n\r\n    /** Buttons for toast with type \"confirm\" */\r\n    toolbarItems?: ToastToolbarItems;\r\n}\r\n\r\nexport type ToastType = 'simple' | 'confirm';\r\n\r\nexport interface SystemToastParams {\r\n    id: number;\r\n    type: ToastType;\r\n}\r\n\r\nexport interface ToastToolbarItems {\r\n    actionButton: ToastToolbarButton;\r\n    cancelButton: ToastToolbarButton;\r\n}\r\n\r\nexport interface ToastToolbarButton {\r\n    text: string;\r\n    visible?: boolean;\r\n    class?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ToastMessage, ToastMessageParams, SystemToastParams } from './Models/toast-message.models';\r\n\r\n@Injectable()\r\nexport class AngularBootstrapToastsService {\r\n\r\n  private toastsList: BehaviorSubject<ToastMessage[]> = new BehaviorSubject<ToastMessage[]>([]);\r\n  public get ToastsList$ (): Observable<ToastMessage[]> {\r\n    return this.toastsList.asObservable();\r\n  }\r\n\r\n  private defaultTitle: string = 'Title';\r\n  public get DefaultTitle (): string {\r\n    return this.defaultTitle;\r\n  }\r\n\r\n  private defaultText: string = 'Message';\r\n  public get DefaultText (): string {\r\n    return this.defaultText;\r\n  }\r\n\r\n  private defaultDuration: number = 5000;\r\n  public get DefaultDuration (): number {\r\n    return this.defaultDuration;\r\n  }\r\n\r\n\r\n  private minDuration: number   = 300;\r\n  private maxMessageId: number  = 1;\r\n\r\n  constructor () {}\r\n\r\n  /** Show success toast message */\r\n  public showSimpleToast (params: ToastMessageParams): ToastMessage {\r\n    const systemParams: SystemToastParams = {\r\n      id: this.maxMessageId,\r\n      type: 'simple'\r\n    };\r\n\r\n    return this.createToast(params, systemParams);\r\n  }\r\n\r\n  /** Show toast message with confirmation and decline button variants */\r\n  public showConfirmToast (params: ToastMessageParams): ToastMessage {\r\n    const systemParams: SystemToastParams = {\r\n      id: this.maxMessageId,\r\n      type: 'confirm'\r\n    };\r\n\r\n    return this.createToast(params, systemParams);\r\n  }\r\n\r\n  /** Change Default **Title** for all toasts wich not get `title` property from params when creating */\r\n  public changeDefaultTitle (newTitle: string) {\r\n    const validTitle = this.validateTitle(newTitle);\r\n\r\n    if (validTitle) {\r\n      this.defaultTitle = validTitle;\r\n    }\r\n  }\r\n\r\n  /** Change Default **Text** for all toasts wich not get `text` property from params when creating */\r\n  public changeDefaultText (newText: string) {\r\n    const validText = this.validateText(newText);\r\n\r\n    if (validText) {\r\n      this.defaultText = validText;\r\n    }\r\n  }\r\n\r\n  /** Change Default **Duration** for all toasts */\r\n  public changeDefaultDuration (duration: number) {\r\n    const validDuration = this.validateDuration(duration);\r\n\r\n    if (validDuration) {\r\n      this.defaultDuration = duration;\r\n    }\r\n  }\r\n\r\n  private createToast (params: ToastMessageParams, systemParams: SystemToastParams): ToastMessage {\r\n    const messages    = this.toastsList.getValue();\r\n    const validParams = this.validateParams(params);\r\n    const toast       = new ToastMessage(validParams, systemParams);\r\n\r\n    messages.push(toast);\r\n\r\n    this.maxMessageId++;\r\n    this.toastsList.next(messages);\r\n\r\n    const toastSubscription = toast.ConfirmationResult$.subscribe(() => {\r\n      const actualMessages = this.toastsList.getValue();\r\n\r\n      for (const [index, message] of actualMessages.entries()) {\r\n        if (message.Id === toast.Id) {\r\n          actualMessages.splice(index, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.toastsList.next(actualMessages);\r\n\r\n      toastSubscription.unsubscribe();\r\n    });\r\n\r\n    return toast;\r\n  }\r\n\r\n  private validateParams (params: ToastMessageParams): ToastMessageParams {\r\n    const newParams = params;\r\n\r\n    try {\r\n      newParams.title = this.validateTitle(newParams.title);\r\n    } catch (err) {\r\n      newParams.title = this.DefaultTitle;\r\n    }\r\n\r\n    try {\r\n      newParams.text = this.validateText(newParams.text);\r\n    } catch (err) {\r\n      newParams.text = this.DefaultText;\r\n    }\r\n\r\n    try {\r\n      newParams.duration = this.validateDuration(newParams.duration);\r\n    } catch (err) {\r\n      newParams.duration = this.DefaultDuration;\r\n    }\r\n\r\n    return newParams;\r\n  }\r\n\r\n  private validateTitle (title: string) {\r\n    if (!title || typeof title !== 'string') {\r\n      throw new Error('Tost default title must be a string with length');\r\n    }\r\n\r\n    return title;\r\n  }\r\n\r\n  private validateText (text: string) {\r\n    if (!text || typeof text !== 'string') {\r\n      throw new Error('Tost default text must be a string with length');\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  private validateDuration (duration: number) {\r\n    const durationAsNumber: number = +duration;\r\n\r\n    if (isNaN(durationAsNumber)) {\r\n      throw new Error('Tost duration must be a number');\r\n    } else if (durationAsNumber < this.minDuration) {\r\n      throw new Error(`Tost duration must be more than ${this.minDuration} milliseconds`);\r\n    }\r\n\r\n    return durationAsNumber;\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { ToastMessage } from '../../Models/toast-message.models';\r\nimport { Subscription } from 'rxjs';\r\nimport { AngularBootstrapToastsService } from '../../angular-bootstrap-toasts.service';\r\nimport { PositionModel } from '../../Models/toast-container.models';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'Angular-Bootstrap-Toasts-Container',\r\n    templateUrl: './toasts-container.component.html',\r\n    styleUrls: [\r\n        './toasts-container.component.css'\r\n    ],\r\n    animations: [\r\n        trigger(\r\n          'enterAnimation', [\r\n            transition(':enter', [\r\n                style({ transform: 'translateX(100%)', opacity: 0 }),\r\n                animate('350ms ease', style({ transform: 'translateX(0)', opacity: 1 }))\r\n            ]),\r\n            transition(':leave', [\r\n                style({ transform: 'translateX(0)', opacity: 1 }),\r\n                animate('300ms ease', style({ transform: 'scale(0.1)', opacity: 0 }))\r\n            ])\r\n          ]\r\n        )\r\n    ]\r\n})\r\nexport class ToastsContainerComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() public Placement: PositionModel = {\r\n        position: 'topRight'\r\n    };\r\n\r\n    /** Width as CSS value */\r\n    @Input() public Width: string = '250px';\r\n\r\n    @Input() public Classes: string = '';\r\n\r\n    private defaultMargin: string = '15px';\r\n\r\n    public MarginAsString: string = '';\r\n    public toastsList: ToastMessage[] = [];\r\n\r\n    private messagesListSubscription: Subscription;\r\n\r\n    constructor (\r\n        private toastsService: AngularBootstrapToastsService\r\n    ) {}\r\n\r\n    ngOnInit () {\r\n        this.messagesListSubscription = this.toastsService.ToastsList$.subscribe(toasts => {\r\n            this.toastsList = toasts;\r\n        });\r\n\r\n        this.initParams();\r\n    }\r\n\r\n    ngOnDestroy () {\r\n        if (this.messagesListSubscription) {\r\n            this.messagesListSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private initParams () {\r\n        if (!this.Placement) {\r\n            this.Placement = {};\r\n        }\r\n\r\n        this.Placement.marginTop    = this.Placement.marginTop    || this.defaultMargin;\r\n        this.Placement.marginBottom = this.Placement.marginBottom || this.defaultMargin;\r\n        this.Placement.marginLeft   = this.Placement.marginLeft   || this.defaultMargin;\r\n        this.Placement.marginRight  = this.Placement.marginRight  || this.defaultMargin;\r\n\r\n        this.Placement.position     = this.Placement.position     || 'topRight';\r\n    }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { ToastMessage } from '../../Models/toast-message.models';\r\nimport { AngularBootstrapToastsService } from '../../angular-bootstrap-toasts.service';\r\nimport { filter, tap } from 'rxjs/operators';\r\nimport { interval, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'Toast-Message',\r\n    templateUrl: './toast-message.component.html',\r\n    styleUrls: [\r\n        './toast-message.component.css'\r\n    ]\r\n})\r\nexport class ToastMessageComponent implements OnInit, OnDestroy {\r\n    @Input() public Toast: ToastMessage;\r\n\r\n    public currentDuration: number;\r\n    public progressLineWidth: string = '100%';\r\n\r\n    private msInterval: number      = 10;\r\n    private isMouseFocused: boolean = false;\r\n    private durationTimer: Subscription;\r\n\r\n    constructor (\r\n        private toastsService: AngularBootstrapToastsService\r\n    ) {}\r\n\r\n    ngOnInit () {\r\n        this.currentDuration = this.Toast.Duration;\r\n\r\n        this.durationTimer = interval(this.msInterval).pipe(\r\n            filter(() => !this.isMouseFocused),\r\n            tap(() => {\r\n                this.currentDuration -= this.msInterval;\r\n\r\n                if (this.Toast.IsProgressLineEnabled) {\r\n                    this.progressLineWidth = (100 / this.Toast.Duration * this.currentDuration).toFixed(0) + '%';\r\n                }\r\n\r\n                if (this.currentDuration <= 0) {\r\n                    this.Toast.Close();\r\n                }\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n    ngOnDestroy () {\r\n        if (this.durationTimer) {\r\n            this.durationTimer.unsubscribe();\r\n        }\r\n    }\r\n\r\n    public animationPause () {\r\n        this.isMouseFocused = true;\r\n    }\r\n\r\n    public animationPlay () {\r\n        this.isMouseFocused = false;\r\n    }\r\n\r\n    public onClick () {\r\n        if (this.Toast.IsClosableByMouseClick) {\r\n            this.Toast.Close(false);\r\n        }\r\n    }\r\n\r\n    public remove (confirmationResult?: boolean) {\r\n        this.Toast.Close(confirmationResult || false);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ToastsContainerComponent } from './Components/toasts-container/toasts-container.component';\r\nimport { ToastMessageComponent } from './Components/toast-message/toast-message.component';\r\nimport { AngularBootstrapToastsService } from './angular-bootstrap-toasts.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ToastsContainerComponent,\r\n    ToastMessageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  exports: [\r\n    ToastsContainerComponent\r\n  ],\r\n  providers: [\r\n    AngularBootstrapToastsService\r\n  ]\r\n})\r\nexport class AngularBootstrapToastsModule { }\r\n"]}