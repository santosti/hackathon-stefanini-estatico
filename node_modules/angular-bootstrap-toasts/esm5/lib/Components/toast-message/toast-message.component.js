/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ToastMessage } from '../../Models/toast-message.models';
import { AngularBootstrapToastsService } from '../../angular-bootstrap-toasts.service';
import { filter, tap } from 'rxjs/operators';
import { interval } from 'rxjs';
var ToastMessageComponent = /** @class */ (function () {
    function ToastMessageComponent(toastsService) {
        this.toastsService = toastsService;
        this.progressLineWidth = '100%';
        this.msInterval = 10;
        this.isMouseFocused = false;
    }
    /**
     * @return {?}
     */
    ToastMessageComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.currentDuration = this.Toast.Duration;
        this.durationTimer = interval(this.msInterval).pipe(filter((/**
         * @return {?}
         */
        function () { return !_this.isMouseFocused; })), tap((/**
         * @return {?}
         */
        function () {
            _this.currentDuration -= _this.msInterval;
            if (_this.Toast.IsProgressLineEnabled) {
                _this.progressLineWidth = (100 / _this.Toast.Duration * _this.currentDuration).toFixed(0) + '%';
            }
            if (_this.currentDuration <= 0) {
                _this.Toast.Close();
            }
        }))).subscribe();
    };
    /**
     * @return {?}
     */
    ToastMessageComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.durationTimer) {
            this.durationTimer.unsubscribe();
        }
    };
    /**
     * @return {?}
     */
    ToastMessageComponent.prototype.animationPause = /**
     * @return {?}
     */
    function () {
        this.isMouseFocused = true;
    };
    /**
     * @return {?}
     */
    ToastMessageComponent.prototype.animationPlay = /**
     * @return {?}
     */
    function () {
        this.isMouseFocused = false;
    };
    /**
     * @return {?}
     */
    ToastMessageComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        if (this.Toast.IsClosableByMouseClick) {
            this.Toast.Close(false);
        }
    };
    /**
     * @param {?=} confirmationResult
     * @return {?}
     */
    ToastMessageComponent.prototype.remove = /**
     * @param {?=} confirmationResult
     * @return {?}
     */
    function (confirmationResult) {
        this.Toast.Close(confirmationResult || false);
    };
    ToastMessageComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Toast-Message',
                    template: "<div\r\n    class=\"_toast {{ Toast.ToastClass || '' }}\"\r\n    (mouseover)=\"animationPause()\"\r\n    (mouseout)=\"animationPlay()\"\r\n    (click)=\"onClick()\">\r\n    <div class=\"_toast-header {{ Toast.TitleClass || '' }}\">\r\n        <i\r\n            *ngIf=\"Toast.IconClass\"\r\n            class=\"{{ Toast.IconClass }}\"></i>\r\n\r\n        <strong\r\n            class=\"mr-auto\">{{ Toast.Title }}</strong>\r\n\r\n        <small *ngIf=\"Toast.Moment\">{{ Toast.Moment }}</small>\r\n\r\n        <button\r\n            type=\"button\"\r\n            class=\"_close {{ Toast.CloseButtonClass || '' }}\"\r\n            (click)=\"remove()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div\r\n        *ngIf=\"Toast.IsProgressLineEnabled\"\r\n        class=\"_duration-line {{ Toast.ProgressLineClass || '' }}\"\r\n        [style.width]=\"progressLineWidth\"></div>\r\n\r\n    <div\r\n        class=\"_toast-body {{ Toast.BodyClass || '' }}\"\r\n        [innerHTML]=\"Toast.Text\"></div>\r\n\r\n    <div\r\n        *ngIf=\"Toast.Type === 'confirm' && Toast.ToolbarItems\"\r\n        class=\"_toast-toolbar {{ Toast.ToolbarClass || '' }}\">\r\n        <button\r\n            *ngIf=\"Toast.ToolbarItems.actionButton.visible\"\r\n            class=\"_toast-toolbar_actionButton {{ Toast.ToolbarItems.actionButton.class || 'btn btn-success btn-sm' }}\"\r\n            (click)=\"remove(true)\">{{ Toast.ToolbarItems.actionButton.text || 'Confirm' }}</button>\r\n\r\n        <button\r\n            *ngIf=\"Toast.ToolbarItems.cancelButton.visible\"\r\n            class=\"_toast-toolbar_cancelButton {{ Toast.ToolbarItems.cancelButton.class || 'btn btn-light btn-sm' }}\"\r\n            (click)=\"remove(false)\">{{ Toast.ToolbarItems.cancelButton.text || 'Cancel' }}</button>\r\n    </div>\r\n</div>",
                    styles: [":host{display:block}._toast{width:100%;margin-bottom:10px;border:1px solid #dadada;background:#fff;box-shadow:0 7px 9px -4px rgba(0,0,0,.2),0 14px 21px 2px rgba(0,0,0,.14),0 5px 26px 4px rgba(0,0,0,.12)}._toast-header{width:100%;display:flex;align-items:center;padding:8px;border-bottom:1px solid #dfe0e1;background:#f5f5f5;color:#6c757d}._duration-line{height:3px;background:rgba(0,0,0,.25);transition:.1s}._toast-body{font-size:12px;padding:12px;background:#fff}._toast-header i{margin-right:7px}._toast-header strong{font-size:16px}._toast-header small{font-size:11px;color:#6c757d}._toast-toolbar{margin:10px}._toast-toolbar_actionButton{margin-right:8px}button._close{padding:0;margin-left:.5rem;margin-bottom:.25rem;float:right;-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:transparent;border:0;font-size:1.5rem;font-weight:700;line-height:1;color:#000;opacity:.6}button._close:hover{cursor:pointer;opacity:.8}"]
                }] }
    ];
    /** @nocollapse */
    ToastMessageComponent.ctorParameters = function () { return [
        { type: AngularBootstrapToastsService }
    ]; };
    ToastMessageComponent.propDecorators = {
        Toast: [{ type: Input }]
    };
    return ToastMessageComponent;
}());
export { ToastMessageComponent };
if (false) {
    /** @type {?} */
    ToastMessageComponent.prototype.Toast;
    /** @type {?} */
    ToastMessageComponent.prototype.currentDuration;
    /** @type {?} */
    ToastMessageComponent.prototype.progressLineWidth;
    /**
     * @type {?}
     * @private
     */
    ToastMessageComponent.prototype.msInterval;
    /**
     * @type {?}
     * @private
     */
    ToastMessageComponent.prototype.isMouseFocused;
    /**
     * @type {?}
     * @private
     */
    ToastMessageComponent.prototype.durationTimer;
    /**
     * @type {?}
     * @private
     */
    ToastMessageComponent.prototype.toastsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3QtbWVzc2FnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWJvb3RzdHJhcC10b2FzdHMvIiwic291cmNlcyI6WyJsaWIvQ29tcG9uZW50cy90b2FzdC1tZXNzYWdlL3RvYXN0LW1lc3NhZ2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLFFBQVEsRUFBZ0IsTUFBTSxNQUFNLENBQUM7QUFFOUM7SUFpQkksK0JBQ1ksYUFBNEM7UUFBNUMsa0JBQWEsR0FBYixhQUFhLENBQStCO1FBUGpELHNCQUFpQixHQUFXLE1BQU0sQ0FBQztRQUVsQyxlQUFVLEdBQWdCLEVBQUUsQ0FBQztRQUM3QixtQkFBYyxHQUFZLEtBQUssQ0FBQztJQUtyQyxDQUFDOzs7O0lBRUosd0NBQVE7OztJQUFSO1FBQUEsaUJBaUJDO1FBaEJHLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7UUFFM0MsSUFBSSxDQUFDLGFBQWEsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FDL0MsTUFBTTs7O1FBQUMsY0FBTSxPQUFBLENBQUMsS0FBSSxDQUFDLGNBQWMsRUFBcEIsQ0FBb0IsRUFBQyxFQUNsQyxHQUFHOzs7UUFBQztZQUNBLEtBQUksQ0FBQyxlQUFlLElBQUksS0FBSSxDQUFDLFVBQVUsQ0FBQztZQUV4QyxJQUFJLEtBQUksQ0FBQyxLQUFLLENBQUMscUJBQXFCLEVBQUU7Z0JBQ2xDLEtBQUksQ0FBQyxpQkFBaUIsR0FBRyxDQUFDLEdBQUcsR0FBRyxLQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxLQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQzthQUNoRztZQUVELElBQUksS0FBSSxDQUFDLGVBQWUsSUFBSSxDQUFDLEVBQUU7Z0JBQzNCLEtBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7YUFDdEI7UUFDTCxDQUFDLEVBQUMsQ0FDTCxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ2xCLENBQUM7Ozs7SUFFRCwyQ0FBVzs7O0lBQVg7UUFDSSxJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDcEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUNwQztJQUNMLENBQUM7Ozs7SUFFTSw4Q0FBYzs7O0lBQXJCO1FBQ0ksSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVNLDZDQUFhOzs7SUFBcEI7UUFDSSxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQztJQUNoQyxDQUFDOzs7O0lBRU0sdUNBQU87OztJQUFkO1FBQ0ksSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLHNCQUFzQixFQUFFO1lBQ25DLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQzNCO0lBQ0wsQ0FBQzs7Ozs7SUFFTSxzQ0FBTTs7OztJQUFiLFVBQWUsa0JBQTRCO1FBQ3ZDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLGtCQUFrQixJQUFJLEtBQUssQ0FBQyxDQUFDO0lBQ2xELENBQUM7O2dCQTlESixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLGVBQWU7b0JBQ3pCLGsxREFBNkM7O2lCQUloRDs7OztnQkFWUSw2QkFBNkI7Ozt3QkFZakMsS0FBSzs7SUF1RFYsNEJBQUM7Q0FBQSxBQS9ERCxJQStEQztTQXhEWSxxQkFBcUI7OztJQUM5QixzQ0FBb0M7O0lBRXBDLGdEQUErQjs7SUFDL0Isa0RBQTBDOzs7OztJQUUxQywyQ0FBcUM7Ozs7O0lBQ3JDLCtDQUF3Qzs7Ozs7SUFDeEMsOENBQW9DOzs7OztJQUdoQyw4Q0FBb0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUb2FzdE1lc3NhZ2UgfSBmcm9tICcuLi8uLi9Nb2RlbHMvdG9hc3QtbWVzc2FnZS5tb2RlbHMnO1xyXG5pbXBvcnQgeyBBbmd1bGFyQm9vdHN0cmFwVG9hc3RzU2VydmljZSB9IGZyb20gJy4uLy4uL2FuZ3VsYXItYm9vdHN0cmFwLXRvYXN0cy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgZmlsdGVyLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcbmltcG9ydCB7IGludGVydmFsLCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdUb2FzdC1NZXNzYWdlJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi90b2FzdC1tZXNzYWdlLmNvbXBvbmVudC5odG1sJyxcclxuICAgIHN0eWxlVXJsczogW1xyXG4gICAgICAgICcuL3RvYXN0LW1lc3NhZ2UuY29tcG9uZW50LmNzcydcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIFRvYXN0TWVzc2FnZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICAgIEBJbnB1dCgpIHB1YmxpYyBUb2FzdDogVG9hc3RNZXNzYWdlO1xyXG5cclxuICAgIHB1YmxpYyBjdXJyZW50RHVyYXRpb246IG51bWJlcjtcclxuICAgIHB1YmxpYyBwcm9ncmVzc0xpbmVXaWR0aDogc3RyaW5nID0gJzEwMCUnO1xyXG5cclxuICAgIHByaXZhdGUgbXNJbnRlcnZhbDogbnVtYmVyICAgICAgPSAxMDtcclxuICAgIHByaXZhdGUgaXNNb3VzZUZvY3VzZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHByaXZhdGUgZHVyYXRpb25UaW1lcjogU3Vic2NyaXB0aW9uO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yIChcclxuICAgICAgICBwcml2YXRlIHRvYXN0c1NlcnZpY2U6IEFuZ3VsYXJCb290c3RyYXBUb2FzdHNTZXJ2aWNlXHJcbiAgICApIHt9XHJcblxyXG4gICAgbmdPbkluaXQgKCkge1xyXG4gICAgICAgIHRoaXMuY3VycmVudER1cmF0aW9uID0gdGhpcy5Ub2FzdC5EdXJhdGlvbjtcclxuXHJcbiAgICAgICAgdGhpcy5kdXJhdGlvblRpbWVyID0gaW50ZXJ2YWwodGhpcy5tc0ludGVydmFsKS5waXBlKFxyXG4gICAgICAgICAgICBmaWx0ZXIoKCkgPT4gIXRoaXMuaXNNb3VzZUZvY3VzZWQpLFxyXG4gICAgICAgICAgICB0YXAoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50RHVyYXRpb24gLT0gdGhpcy5tc0ludGVydmFsO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLlRvYXN0LklzUHJvZ3Jlc3NMaW5lRW5hYmxlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3NMaW5lV2lkdGggPSAoMTAwIC8gdGhpcy5Ub2FzdC5EdXJhdGlvbiAqIHRoaXMuY3VycmVudER1cmF0aW9uKS50b0ZpeGVkKDApICsgJyUnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnREdXJhdGlvbiA8PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Ub2FzdC5DbG9zZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICkuc3Vic2NyaWJlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkRlc3Ryb3kgKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmR1cmF0aW9uVGltZXIpIHtcclxuICAgICAgICAgICAgdGhpcy5kdXJhdGlvblRpbWVyLnVuc3Vic2NyaWJlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhbmltYXRpb25QYXVzZSAoKSB7XHJcbiAgICAgICAgdGhpcy5pc01vdXNlRm9jdXNlZCA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFuaW1hdGlvblBsYXkgKCkge1xyXG4gICAgICAgIHRoaXMuaXNNb3VzZUZvY3VzZWQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25DbGljayAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuVG9hc3QuSXNDbG9zYWJsZUJ5TW91c2VDbGljaykge1xyXG4gICAgICAgICAgICB0aGlzLlRvYXN0LkNsb3NlKGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlbW92ZSAoY29uZmlybWF0aW9uUmVzdWx0PzogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuVG9hc3QuQ2xvc2UoY29uZmlybWF0aW9uUmVzdWx0IHx8IGZhbHNlKTtcclxuICAgIH1cclxufVxyXG4iXX0=