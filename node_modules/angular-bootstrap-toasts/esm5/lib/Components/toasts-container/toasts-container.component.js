/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { AngularBootstrapToastsService } from '../../angular-bootstrap-toasts.service';
import { trigger, style, animate, transition } from '@angular/animations';
var ToastsContainerComponent = /** @class */ (function () {
    function ToastsContainerComponent(toastsService) {
        this.toastsService = toastsService;
        this.Placement = {
            position: 'topRight'
        };
        /**
         * Width as CSS value
         */
        this.Width = '250px';
        this.Classes = '';
        this.defaultMargin = '15px';
        this.MarginAsString = '';
        this.toastsList = [];
    }
    /**
     * @return {?}
     */
    ToastsContainerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.messagesListSubscription = this.toastsService.ToastsList$.subscribe((/**
         * @param {?} toasts
         * @return {?}
         */
        function (toasts) {
            _this.toastsList = toasts;
        }));
        this.initParams();
    };
    /**
     * @return {?}
     */
    ToastsContainerComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.messagesListSubscription) {
            this.messagesListSubscription.unsubscribe();
        }
    };
    /**
     * @private
     * @return {?}
     */
    ToastsContainerComponent.prototype.initParams = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.Placement) {
            this.Placement = {};
        }
        this.Placement.marginTop = this.Placement.marginTop || this.defaultMargin;
        this.Placement.marginBottom = this.Placement.marginBottom || this.defaultMargin;
        this.Placement.marginLeft = this.Placement.marginLeft || this.defaultMargin;
        this.Placement.marginRight = this.Placement.marginRight || this.defaultMargin;
        this.Placement.position = this.Placement.position || 'topRight';
    };
    ToastsContainerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Angular-Bootstrap-Toasts-Container',
                    template: "<div\r\n    class=\"Advanced-Bootstrap-Container {{ Classes || '' }}\"\r\n    [style.width]=\"Width\"\r\n    [style.left]=\"(Placement.position === 'topLeft'      || Placement.position === 'bottomLeft')  ? Placement.marginLeft : ''\"\r\n    [style.right]=\"(Placement.position === 'topRight'    || Placement.position === 'bottomRight') ? Placement.marginRight : ''\"\r\n    [style.top]=\"(Placement.position === 'topLeft'       || Placement.position === 'topRight')    ? Placement.marginTop : ''\"\r\n    [style.bottom]=\"(Placement.position === 'bottomLeft' || Placement.position === 'bottomRight') ? Placement.marginBottom : ''\">\r\n    \r\n    <Toast-Message\r\n        *ngFor=\"let toast of toastsList\"\r\n        class=\"Toast-Message-Container\"\r\n        [@enterAnimation]\r\n        [Toast]=\"toast\"></Toast-Message>\r\n\r\n</div>",
                    animations: [
                        trigger('enterAnimation', [
                            transition(':enter', [
                                style({ transform: 'translateX(100%)', opacity: 0 }),
                                animate('350ms ease', style({ transform: 'translateX(0)', opacity: 1 }))
                            ]),
                            transition(':leave', [
                                style({ transform: 'translateX(0)', opacity: 1 }),
                                animate('300ms ease', style({ transform: 'scale(0.1)', opacity: 0 }))
                            ])
                        ])
                    ],
                    styles: [".Advanced-Bootstrap-Container{position:fixed;z-index:9999!important}"]
                }] }
    ];
    /** @nocollapse */
    ToastsContainerComponent.ctorParameters = function () { return [
        { type: AngularBootstrapToastsService }
    ]; };
    ToastsContainerComponent.propDecorators = {
        Placement: [{ type: Input }],
        Width: [{ type: Input }],
        Classes: [{ type: Input }]
    };
    return ToastsContainerComponent;
}());
export { ToastsContainerComponent };
if (false) {
    /** @type {?} */
    ToastsContainerComponent.prototype.Placement;
    /**
     * Width as CSS value
     * @type {?}
     */
    ToastsContainerComponent.prototype.Width;
    /** @type {?} */
    ToastsContainerComponent.prototype.Classes;
    /**
     * @type {?}
     * @private
     */
    ToastsContainerComponent.prototype.defaultMargin;
    /** @type {?} */
    ToastsContainerComponent.prototype.MarginAsString;
    /** @type {?} */
    ToastsContainerComponent.prototype.toastsList;
    /**
     * @type {?}
     * @private
     */
    ToastsContainerComponent.prototype.messagesListSubscription;
    /**
     * @type {?}
     * @private
     */
    ToastsContainerComponent.prototype.toastsService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3RzLWNvbnRhaW5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWJvb3RzdHJhcC10b2FzdHMvIiwic291cmNlcyI6WyJsaWIvQ29tcG9uZW50cy90b2FzdHMtY29udGFpbmVyL3RvYXN0cy1jb250YWluZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHcEUsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFFdkYsT0FBTyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRTFFO0lBdUNJLGtDQUNZLGFBQTRDO1FBQTVDLGtCQUFhLEdBQWIsYUFBYSxDQUErQjtRQWpCeEMsY0FBUyxHQUFrQjtZQUN2QyxRQUFRLEVBQUUsVUFBVTtTQUN2QixDQUFDOzs7O1FBR2MsVUFBSyxHQUFXLE9BQU8sQ0FBQztRQUV4QixZQUFPLEdBQVcsRUFBRSxDQUFDO1FBRTdCLGtCQUFhLEdBQVcsTUFBTSxDQUFDO1FBRWhDLG1CQUFjLEdBQVcsRUFBRSxDQUFDO1FBQzVCLGVBQVUsR0FBbUIsRUFBRSxDQUFDO0lBTXBDLENBQUM7Ozs7SUFFSiwyQ0FBUTs7O0lBQVI7UUFBQSxpQkFNQztRQUxHLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxTQUFTOzs7O1FBQUMsVUFBQSxNQUFNO1lBQzNFLEtBQUksQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDO1FBQzdCLENBQUMsRUFBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFFRCw4Q0FBVzs7O0lBQVg7UUFDSSxJQUFJLElBQUksQ0FBQyx3QkFBd0IsRUFBRTtZQUMvQixJQUFJLENBQUMsd0JBQXdCLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDL0M7SUFDTCxDQUFDOzs7OztJQUVPLDZDQUFVOzs7O0lBQWxCO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDakIsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7U0FDdkI7UUFFRCxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsR0FBTSxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsSUFBTyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQ2hGLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDaEYsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEdBQUssSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLElBQU0sSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUNoRixJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsR0FBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsSUFBSyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBRWhGLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxHQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxJQUFRLFVBQVUsQ0FBQztJQUM1RSxDQUFDOztnQkFwRUosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxvQ0FBb0M7b0JBQzlDLHMxQkFBZ0Q7b0JBSWhELFVBQVUsRUFBRTt3QkFDUixPQUFPLENBQ0wsZ0JBQWdCLEVBQUU7NEJBQ2hCLFVBQVUsQ0FBQyxRQUFRLEVBQUU7Z0NBQ2pCLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSxrQkFBa0IsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUM7Z0NBQ3BELE9BQU8sQ0FBQyxZQUFZLEVBQUUsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQzs2QkFDM0UsQ0FBQzs0QkFDRixVQUFVLENBQUMsUUFBUSxFQUFFO2dDQUNqQixLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQztnQ0FDakQsT0FBTyxDQUFDLFlBQVksRUFBRSxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDOzZCQUN4RSxDQUFDO3lCQUNILENBQ0Y7cUJBQ0o7O2lCQUNKOzs7O2dCQXhCUSw2QkFBNkI7Ozs0QkEyQmpDLEtBQUs7d0JBS0wsS0FBSzswQkFFTCxLQUFLOztJQXVDViwrQkFBQztDQUFBLEFBckVELElBcUVDO1NBaERZLHdCQUF3Qjs7O0lBRWpDLDZDQUVFOzs7OztJQUdGLHlDQUF3Qzs7SUFFeEMsMkNBQXFDOzs7OztJQUVyQyxpREFBdUM7O0lBRXZDLGtEQUFtQzs7SUFDbkMsOENBQXVDOzs7OztJQUV2Qyw0REFBK0M7Ozs7O0lBRzNDLGlEQUFvRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBPbkRlc3Ryb3ksIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRvYXN0TWVzc2FnZSB9IGZyb20gJy4uLy4uL01vZGVscy90b2FzdC1tZXNzYWdlLm1vZGVscyc7XHJcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBBbmd1bGFyQm9vdHN0cmFwVG9hc3RzU2VydmljZSB9IGZyb20gJy4uLy4uL2FuZ3VsYXItYm9vdHN0cmFwLXRvYXN0cy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgUG9zaXRpb25Nb2RlbCB9IGZyb20gJy4uLy4uL01vZGVscy90b2FzdC1jb250YWluZXIubW9kZWxzJztcclxuaW1wb3J0IHsgdHJpZ2dlciwgc3R5bGUsIGFuaW1hdGUsIHRyYW5zaXRpb24gfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdBbmd1bGFyLUJvb3RzdHJhcC1Ub2FzdHMtQ29udGFpbmVyJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi90b2FzdHMtY29udGFpbmVyLmNvbXBvbmVudC5odG1sJyxcclxuICAgIHN0eWxlVXJsczogW1xyXG4gICAgICAgICcuL3RvYXN0cy1jb250YWluZXIuY29tcG9uZW50LmNzcydcclxuICAgIF0sXHJcbiAgICBhbmltYXRpb25zOiBbXHJcbiAgICAgICAgdHJpZ2dlcihcclxuICAgICAgICAgICdlbnRlckFuaW1hdGlvbicsIFtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbignOmVudGVyJywgW1xyXG4gICAgICAgICAgICAgICAgc3R5bGUoeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDEwMCUpJywgb3BhY2l0eTogMCB9KSxcclxuICAgICAgICAgICAgICAgIGFuaW1hdGUoJzM1MG1zIGVhc2UnLCBzdHlsZSh7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoMCknLCBvcGFjaXR5OiAxIH0pKVxyXG4gICAgICAgICAgICBdKSxcclxuICAgICAgICAgICAgdHJhbnNpdGlvbignOmxlYXZlJywgW1xyXG4gICAgICAgICAgICAgICAgc3R5bGUoeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDApJywgb3BhY2l0eTogMSB9KSxcclxuICAgICAgICAgICAgICAgIGFuaW1hdGUoJzMwMG1zIGVhc2UnLCBzdHlsZSh7IHRyYW5zZm9ybTogJ3NjYWxlKDAuMSknLCBvcGFjaXR5OiAwIH0pKVxyXG4gICAgICAgICAgICBdKVxyXG4gICAgICAgICAgXVxyXG4gICAgICAgIClcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIFRvYXN0c0NvbnRhaW5lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuXHJcbiAgICBASW5wdXQoKSBwdWJsaWMgUGxhY2VtZW50OiBQb3NpdGlvbk1vZGVsID0ge1xyXG4gICAgICAgIHBvc2l0aW9uOiAndG9wUmlnaHQnXHJcbiAgICB9O1xyXG5cclxuICAgIC8qKiBXaWR0aCBhcyBDU1MgdmFsdWUgKi9cclxuICAgIEBJbnB1dCgpIHB1YmxpYyBXaWR0aDogc3RyaW5nID0gJzI1MHB4JztcclxuXHJcbiAgICBASW5wdXQoKSBwdWJsaWMgQ2xhc3Nlczogc3RyaW5nID0gJyc7XHJcblxyXG4gICAgcHJpdmF0ZSBkZWZhdWx0TWFyZ2luOiBzdHJpbmcgPSAnMTVweCc7XHJcblxyXG4gICAgcHVibGljIE1hcmdpbkFzU3RyaW5nOiBzdHJpbmcgPSAnJztcclxuICAgIHB1YmxpYyB0b2FzdHNMaXN0OiBUb2FzdE1lc3NhZ2VbXSA9IFtdO1xyXG5cclxuICAgIHByaXZhdGUgbWVzc2FnZXNMaXN0U3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XHJcblxyXG4gICAgY29uc3RydWN0b3IgKFxyXG4gICAgICAgIHByaXZhdGUgdG9hc3RzU2VydmljZTogQW5ndWxhckJvb3RzdHJhcFRvYXN0c1NlcnZpY2VcclxuICAgICkge31cclxuXHJcbiAgICBuZ09uSW5pdCAoKSB7XHJcbiAgICAgICAgdGhpcy5tZXNzYWdlc0xpc3RTdWJzY3JpcHRpb24gPSB0aGlzLnRvYXN0c1NlcnZpY2UuVG9hc3RzTGlzdCQuc3Vic2NyaWJlKHRvYXN0cyA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMudG9hc3RzTGlzdCA9IHRvYXN0cztcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5pbml0UGFyYW1zKCk7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkRlc3Ryb3kgKCkge1xyXG4gICAgICAgIGlmICh0aGlzLm1lc3NhZ2VzTGlzdFN1YnNjcmlwdGlvbikge1xyXG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2VzTGlzdFN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGluaXRQYXJhbXMgKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5QbGFjZW1lbnQpIHtcclxuICAgICAgICAgICAgdGhpcy5QbGFjZW1lbnQgPSB7fTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuUGxhY2VtZW50Lm1hcmdpblRvcCAgICA9IHRoaXMuUGxhY2VtZW50Lm1hcmdpblRvcCAgICB8fCB0aGlzLmRlZmF1bHRNYXJnaW47XHJcbiAgICAgICAgdGhpcy5QbGFjZW1lbnQubWFyZ2luQm90dG9tID0gdGhpcy5QbGFjZW1lbnQubWFyZ2luQm90dG9tIHx8IHRoaXMuZGVmYXVsdE1hcmdpbjtcclxuICAgICAgICB0aGlzLlBsYWNlbWVudC5tYXJnaW5MZWZ0ICAgPSB0aGlzLlBsYWNlbWVudC5tYXJnaW5MZWZ0ICAgfHwgdGhpcy5kZWZhdWx0TWFyZ2luO1xyXG4gICAgICAgIHRoaXMuUGxhY2VtZW50Lm1hcmdpblJpZ2h0ICA9IHRoaXMuUGxhY2VtZW50Lm1hcmdpblJpZ2h0ICB8fCB0aGlzLmRlZmF1bHRNYXJnaW47XHJcblxyXG4gICAgICAgIHRoaXMuUGxhY2VtZW50LnBvc2l0aW9uICAgICA9IHRoaXMuUGxhY2VtZW50LnBvc2l0aW9uICAgICB8fCAndG9wUmlnaHQnO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==