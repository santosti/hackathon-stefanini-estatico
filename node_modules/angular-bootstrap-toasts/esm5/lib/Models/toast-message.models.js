/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Subject } from 'rxjs';
var ToastMessage = /** @class */ (function () {
    function ToastMessage(params, systemParams) {
        this.confirmationResult = new Subject();
        this.id = systemParams.id;
        this.type = systemParams.type;
        this.text = params.text;
        this.title = params.title;
        this.moment = params.moment;
        this.duration = params.duration;
        this.isProgressLineEnabled = params.showProgressLine;
        this.isDurationPausedByMouse = params.pauseDurationOnMouseEnter;
        this.isClosableByMouseClick = params.closeByClick;
        this.iconClass = params.iconClass;
        this.progressLineClass = params.progressLineClass;
        this.titleClass = params.titleClass;
        this.bodyClass = params.bodyClass;
        this.toastClass = params.toastClass;
        this.toolbarClass = params.toolbarClass;
        this.closeButtonClass = params.closeButtonClass;
        this.toolbarItems = params.toolbarItems;
    }
    Object.defineProperty(ToastMessage.prototype, "ConfirmationResult$", {
        get: /**
         * @return {?}
         */
        function () {
            return this.confirmationResult.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "Id", {
        get: /**
         * @return {?}
         */
        function () {
            return this.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "Type", {
        get: /**
         * @return {?}
         */
        function () {
            return this.type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "Title", {
        get: /**
         * @return {?}
         */
        function () {
            return this.title;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "Text", {
        get: /**
         * @return {?}
         */
        function () {
            return this.text;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "Moment", {
        get: /**
         * @return {?}
         */
        function () {
            return this.moment;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "Duration", {
        get: /**
         * @return {?}
         */
        function () {
            return this.duration;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "ToolbarItems", {
        get: /**
         * @return {?}
         */
        function () {
            return this.toolbarItems;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "IsProgressLineEnabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isProgressLineEnabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "IsDurationPausedByMouse", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isDurationPausedByMouse;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "IsClosableByMouseClick", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isClosableByMouseClick;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "IconClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.iconClass;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "CloseButtonClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.closeButtonClass;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "ProgressLineClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.progressLineClass;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "TitleClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.titleClass;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "BodyClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.bodyClass;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "ToolbarClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.toolbarClass;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastMessage.prototype, "ToastClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.toastClass;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?=} confirmationStatus
     * @return {?}
     */
    ToastMessage.prototype.Close = /**
     * @param {?=} confirmationStatus
     * @return {?}
     */
    function (confirmationStatus) {
        this.confirmationResult.next(confirmationStatus || false);
    };
    return ToastMessage;
}());
export { ToastMessage };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.confirmationResult;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.id;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.type;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.title;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.text;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.moment;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.duration;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.toolbarItems;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.isProgressLineEnabled;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.isDurationPausedByMouse;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.isClosableByMouseClick;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.iconClass;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.closeButtonClass;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.progressLineClass;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.titleClass;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.bodyClass;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.toolbarClass;
    /**
     * @type {?}
     * @private
     */
    ToastMessage.prototype.toastClass;
}
var ToastMessageParams = /** @class */ (function () {
    function ToastMessageParams() {
    }
    return ToastMessageParams;
}());
export { ToastMessageParams };
if (false) {
    /** @type {?} */
    ToastMessageParams.prototype.text;
    /** @type {?} */
    ToastMessageParams.prototype.title;
    /**
     * Great property to show time/date or something like this (short info near title)
     * @type {?}
     */
    ToastMessageParams.prototype.moment;
    /**
     * Time in milliseconds over which will be displayed toast
     * @type {?}
     */
    ToastMessageParams.prototype.duration;
    /**
     * Is toast will have progress line of duration time?
     * @type {?}
     */
    ToastMessageParams.prototype.showProgressLine;
    /**
     * Is toast will closable by mouse click on toast block
     * @type {?}
     */
    ToastMessageParams.prototype.closeByClick;
    /**
     * Is toast duration needs to be paused when mouse enter on toast block?
     * @type {?}
     */
    ToastMessageParams.prototype.pauseDurationOnMouseEnter;
    /**
     * Class of progress line
     * @type {?}
     */
    ToastMessageParams.prototype.progressLineClass;
    /**
     * Class of icon for title
     * For example: `fas fa-heart` (FontAwesome)
     * You can also add color class, ex: `fas fa-heart text-success` (Bootstrap color class)
     * @type {?}
     */
    ToastMessageParams.prototype.iconClass;
    /**
     * Class for title block of toast
     * @type {?}
     */
    ToastMessageParams.prototype.titleClass;
    /**
     * Class for body block of toast
     * @type {?}
     */
    ToastMessageParams.prototype.bodyClass;
    /**
     * Class for block of toast
     * @type {?}
     */
    ToastMessageParams.prototype.toastClass;
    /**
     * Class for toolbar block
     * @type {?}
     */
    ToastMessageParams.prototype.toolbarClass;
    /**
     * Class for close button
     * @type {?}
     */
    ToastMessageParams.prototype.closeButtonClass;
    /**
     * Buttons for toast with type "confirm"
     * @type {?}
     */
    ToastMessageParams.prototype.toolbarItems;
}
/**
 * @record
 */
export function SystemToastParams() { }
if (false) {
    /** @type {?} */
    SystemToastParams.prototype.id;
    /** @type {?} */
    SystemToastParams.prototype.type;
}
/**
 * @record
 */
export function ToastToolbarItems() { }
if (false) {
    /** @type {?} */
    ToastToolbarItems.prototype.actionButton;
    /** @type {?} */
    ToastToolbarItems.prototype.cancelButton;
}
/**
 * @record
 */
export function ToastToolbarButton() { }
if (false) {
    /** @type {?} */
    ToastToolbarButton.prototype.text;
    /** @type {?|undefined} */
    ToastToolbarButton.prototype.visible;
    /** @type {?|undefined} */
    ToastToolbarButton.prototype.class;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3QtbWVzc2FnZS5tb2RlbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWJvb3RzdHJhcC10b2FzdHMvIiwic291cmNlcyI6WyJsaWIvTW9kZWxzL3RvYXN0LW1lc3NhZ2UubW9kZWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBRTNDO0lBK0ZJLHNCQUNJLE1BQTBCLEVBQzFCLFlBQStCO1FBaEczQix1QkFBa0IsR0FBcUIsSUFBSSxPQUFPLEVBQVcsQ0FBQztRQWtHbEUsSUFBSSxDQUFDLEVBQUUsR0FBd0IsWUFBWSxDQUFDLEVBQUUsQ0FBQztRQUMvQyxJQUFJLENBQUMsSUFBSSxHQUFzQixZQUFZLENBQUMsSUFBSSxDQUFDO1FBQ2pELElBQUksQ0FBQyxJQUFJLEdBQXNCLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFDM0MsSUFBSSxDQUFDLEtBQUssR0FBcUIsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUM1QyxJQUFJLENBQUMsTUFBTSxHQUFvQixNQUFNLENBQUMsTUFBTSxDQUFDO1FBQzdDLElBQUksQ0FBQyxRQUFRLEdBQWtCLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDL0MsSUFBSSxDQUFDLHFCQUFxQixHQUFLLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztRQUN2RCxJQUFJLENBQUMsdUJBQXVCLEdBQUcsTUFBTSxDQUFDLHlCQUF5QixDQUFDO1FBQ2hFLElBQUksQ0FBQyxzQkFBc0IsR0FBSSxNQUFNLENBQUMsWUFBWSxDQUFDO1FBQ25ELElBQUksQ0FBQyxTQUFTLEdBQWlCLE1BQU0sQ0FBQyxTQUFTLENBQUM7UUFDaEQsSUFBSSxDQUFDLGlCQUFpQixHQUFTLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQztRQUN4RCxJQUFJLENBQUMsVUFBVSxHQUFnQixNQUFNLENBQUMsVUFBVSxDQUFDO1FBQ2pELElBQUksQ0FBQyxTQUFTLEdBQWlCLE1BQU0sQ0FBQyxTQUFT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Ozs7OztJQUtyQiw4QkFBdUI7Ozs7O0lBS3ZCLGdDQUF5Qjs7Ozs7SUFLekIsb0NBQXdDOzs7OztJQUt4Qyw2Q0FBdUM7Ozs7O0lBS3ZDLCtDQUF5Qzs7Ozs7SUFLekMsOENBQXdDOzs7OztJQUt4QyxpQ0FBMEI7Ozs7O0lBSzFCLHdDQUFpQzs7Ozs7SUFLakMseUNBQWtDOzs7OztJQUtsQyxrQ0FBMkI7Ozs7O0lBSzNCLGlDQUEwQjs7Ozs7SUFLMUIsb0NBQTZCOzs7OztJQUs3QixrQ0FBMkI7O0FBaUMvQjtJQUFBO0lBOENBLENBQUM7SUFBRCx5QkFBQztBQUFELENBQUMsQUE5Q0QsSUE4Q0M7Ozs7SUE3Q0csa0NBQWM7O0lBRWQsbUNBQWU7Ozs7O0lBR2Ysb0NBQWdCOzs7OztJQUdoQixzQ0FBa0I7Ozs7O0lBR2xCLDhDQUEyQjs7Ozs7SUFHM0IsMENBQXVCOzs7OztJQUd2Qix1REFBb0M7Ozs7O0lBR3BDLCtDQUEyQjs7Ozs7OztJQU0zQix1Q0FBbUI7Ozs7O0lBR25CLHdDQUFvQjs7Ozs7SUFHcEIsdUNBQW1COzs7OztJQUduQix3Q0FBb0I7Ozs7O0lBR3BCLDBDQUFzQjs7Ozs7SUFHdEIsOENBQTBCOzs7OztJQUcxQiwwQ0FBaUM7Ozs7O0FBS3JDLHVDQUdDOzs7SUFGRywrQkFBVzs7SUFDWCxpQ0FBZ0I7Ozs7O0FBR3BCLHVDQUdDOzs7SUFGRyx5Q0FBaUM7O0lBQ2pDLHlDQUFpQzs7Ozs7QUFHckMsd0NBSUM7OztJQUhHLGtDQUFhOztJQUNiLHFDQUFrQjs7SUFDbEIsbUNBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJqZWN0LCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5leHBvcnQgY2xhc3MgVG9hc3RNZXNzYWdlIHtcclxuICAgIHByaXZhdGUgY29uZmlybWF0aW9uUmVzdWx0OiBTdWJqZWN0PGJvb2xlYW4+ID0gbmV3IFN1YmplY3Q8Ym9vbGVhbj4oKTtcclxuICAgIHB1YmxpYyBnZXQgQ29uZmlybWF0aW9uUmVzdWx0JCAoKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29uZmlybWF0aW9uUmVzdWx0LmFzT2JzZXJ2YWJsZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgaWQ6IG51bWJlcjtcclxuICAgIHB1YmxpYyBnZXQgSWQgKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaWQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSB0eXBlOiBUb2FzdFR5cGU7XHJcbiAgICBwdWJsaWMgZ2V0IFR5cGUgKCk6IFRvYXN0VHlwZSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudHlwZTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHRpdGxlOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgZ2V0IFRpdGxlICgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnRpdGxlO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgdGV4dDogc3RyaW5nO1xyXG4gICAgcHVibGljIGdldCBUZXh0ICgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBtb21lbnQ6IHN0cmluZztcclxuICAgIHB1YmxpYyBnZXQgTW9tZW50ICgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1vbWVudDtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGR1cmF0aW9uOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgZ2V0IER1cmF0aW9uICgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmR1cmF0aW9uO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgdG9vbGJhckl0ZW1zOiBUb2FzdFRvb2xiYXJJdGVtcztcclxuICAgIHB1YmxpYyBnZXQgVG9vbGJhckl0ZW1zICgpOiBUb2FzdFRvb2xiYXJJdGVtcyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudG9vbGJhckl0ZW1zO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgaXNQcm9ncmVzc0xpbmVFbmFibGVkOiBib29sZWFuO1xyXG4gICAgcHVibGljIGdldCBJc1Byb2dyZXNzTGluZUVuYWJsZWQgKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmlzUHJvZ3Jlc3NMaW5lRW5hYmxlZDtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGlzRHVyYXRpb25QYXVzZWRCeU1vdXNlOiBib29sZWFuO1xyXG4gICAgcHVibGljIGdldCBJc0R1cmF0aW9uUGF1c2VkQnlNb3VzZSAoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNEdXJhdGlvblBhdXNlZEJ5TW91c2U7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBpc0Nsb3NhYmxlQnlNb3VzZUNsaWNrOiBib29sZWFuO1xyXG4gICAgcHVibGljIGdldCBJc0Nsb3NhYmxlQnlNb3VzZUNsaWNrICgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5pc0Nsb3NhYmxlQnlNb3VzZUNsaWNrO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgaWNvbkNsYXNzOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgZ2V0IEljb25DbGFzcyAoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5pY29uQ2xhc3M7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBjbG9zZUJ1dHRvbkNsYXNzOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgZ2V0IENsb3NlQnV0dG9uQ2xhc3MgKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2xvc2VCdXR0b25DbGFzcztcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHByb2dyZXNzTGluZUNsYXNzOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgZ2V0IFByb2dyZXNzTGluZUNsYXNzICgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnByb2dyZXNzTGluZUNsYXNzO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgdGl0bGVDbGFzczogc3RyaW5nO1xyXG4gICAgcHVibGljIGdldCBUaXRsZUNsYXNzICgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnRpdGxlQ2xhc3M7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBib2R5Q2xhc3M6IHN0cmluZztcclxuICAgIHB1YmxpYyBnZXQgQm9keUNsYXNzICgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmJvZHlDbGFzcztcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHRvb2xiYXJDbGFzczogc3RyaW5nO1xyXG4gICAgcHVibGljIGdldCBUb29sYmFyQ2xhc3MgKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudG9vbGJhckNsYXNzO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgdG9hc3RDbGFzczogc3RyaW5nO1xyXG4gICAgcHVibGljIGdldCBUb2FzdENsYXNzICgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnRvYXN0Q2xhc3M7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIENsb3NlIChjb25maXJtYXRpb25TdGF0dXM/OiBib29sZWFuKSB7XHJcbiAgICAgICAgdGhpcy5jb25maXJtYXRpb25SZXN1bHQubmV4dChjb25maXJtYXRpb25TdGF0dXMgfHwgZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0cnVjdG9yIChcclxuICAgICAgICBwYXJhbXM6IFRvYXN0TWVzc2FnZVBhcmFtcyxcclxuICAgICAgICBzeXN0ZW1QYXJhbXM6IFN5c3RlbVRvYXN0UGFyYW1zXHJcbiAgICApIHtcclxuICAgICAgICB0aGlzLmlkICAgICAgICAgICAgICAgICAgICAgID0gc3lzdGVtUGFyYW1zLmlkO1xyXG4gICAgICAgIHRoaXMudHlwZSAgICAgICAgICAgICAgICAgICAgPSBzeXN0ZW1QYXJhbXMudHlwZTtcclxuICAgICAgICB0aGlzLnRleHQgICAgICAgICAgICAgICAgICAgID0gcGFyYW1zLnRleHQ7XHJcbiAgICAgICAgdGhpcy50aXRsZSAgICAgICAgICAgICAgICAgICA9IHBhcmFtcy50aXRsZTtcclxuICAgICAgICB0aGlzLm1vbWVudCAgICAgICAgICAgICAgICAgID0gcGFyYW1zLm1vbWVudDtcclxuICAgICAgICB0aGlzLmR1cmF0aW9uICAgICAgICAgICAgICAgID0gcGFyYW1zLmR1cmF0aW9uO1xyXG4gICAgICAgIHRoaXMuaXNQcm9ncmVzc0xpbmVFbmFibGVkICAgPSBwYXJhbXMuc2hvd1Byb2dyZXNzTGluZTtcclxuICAgICAgICB0aGlzLmlzRHVyYXRpb25QYXVzZWRCeU1vdXNlID0gcGFyYW1zLnBhdXNlRHVyYXRpb25Pbk1vdXNlRW50ZXI7XHJcbiAgICAgICAgdGhpcy5pc0Nsb3NhYmxlQnlNb3VzZUNsaWNrICA9IHBhcmFtcy5jbG9zZUJ5Q2xpY2s7XHJcbiAgICAgICAgdGhpcy5pY29uQ2xhc3MgICAgICAgICAgICAgICA9IHBhcmFtcy5pY29uQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5wcm9ncmVzc0xpbmVDbGFzcyAgICAgICA9IHBhcmFtcy5wcm9ncmVzc0xpbmVDbGFzcztcclxuICAgICAgICB0aGlzLnRpdGxlQ2xhc3MgICAgICAgICAgICAgID0gcGFyYW1zLnRpdGxlQ2xhc3M7XHJcbiAgICAgICAgdGhpcy5ib2R5Q2xhc3MgICAgICAgICAgICAgICA9IHBhcmFtcy5ib2R5Q2xhc3M7XHJcbiAgICAgICAgdGhpcy50b2FzdENsYXNzICAgICAgICAgICAgICA9IHBhcmFtcy50b2FzdENsYXNzO1xyXG4gICAgICAgIHRoaXMudG9vbGJhckNsYXNzICAgICAgICAgICAgPSBwYXJhbXMudG9vbGJhckNsYXNzO1xyXG4gICAgICAgIHRoaXMuY2xvc2VCdXR0b25DbGFzcyAgICAgICAgPSBwYXJhbXMuY2xvc2VCdXR0b25DbGFzcztcclxuICAgICAgICB0aGlzLnRvb2xiYXJJdGVtcyAgICAgICAgICAgID0gcGFyYW1zLnRvb2xiYXJJdGVtcztcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFRvYXN0TWVzc2FnZVBhcmFtcyB7XHJcbiAgICB0ZXh0Pzogc3RyaW5nO1xyXG5cclxuICAgIHRpdGxlPzogc3RyaW5nO1xyXG5cclxuICAgIC8qKiBHcmVhdCBwcm9wZXJ0eSB0byBzaG93IHRpbWUvZGF0ZSBvciBzb21ldGhpbmcgbGlrZSB0aGlzIChzaG9ydCBpbmZvIG5lYXIgdGl0bGUpICovXHJcbiAgICBtb21lbnQ/OiBzdHJpbmc7XHJcblxyXG4gICAgLyoqIFRpbWUgaW4gbWlsbGlzZWNvbmRzIG92ZXIgd2hpY2ggd2lsbCBiZSBkaXNwbGF5ZWQgdG9hc3QgICovXHJcbiAgICBkdXJhdGlvbj86IG51bWJlcjtcclxuXHJcbiAgICAvKiogSXMgdG9hc3Qgd2lsbCBoYXZlIHByb2dyZXNzIGxpbmUgb2YgZHVyYXRpb24gdGltZT8gKi9cclxuICAgIHNob3dQcm9ncmVzc0xpbmU/OiBib29sZWFuO1xyXG5cclxuICAgIC8qKiBJcyB0b2FzdCB3aWxsIGNsb3NhYmxlIGJ5IG1vdXNlIGNsaWNrIG9uIHRvYXN0IGJsb2NrICovXHJcbiAgICBjbG9zZUJ5Q2xpY2s/OiBib29sZWFuO1xyXG5cclxuICAgIC8qKiBJcyB0b2FzdCBkdXJhdGlvbiBuZWVkcyB0byBiZSBwYXVzZWQgd2hlbiBtb3VzZSBlbnRlciBvbiB0b2FzdCBibG9jaz8gKi9cclxuICAgIHBhdXNlRHVyYXRpb25Pbk1vdXNlRW50ZXI/OiBib29sZWFuO1xyXG5cclxuICAgIC8qKiBDbGFzcyBvZiBwcm9ncmVzcyBsaW5lICovXHJcbiAgICBwcm9ncmVzc0xpbmVDbGFzcz86IHN0cmluZztcclxuXHJcbiAgICAvKiogQ2xhc3Mgb2YgaWNvbiBmb3IgdGl0bGVcclxuICAgICAqIEZvciBleGFtcGxlOiBgZmFzIGZhLWhlYXJ0YCAoRm9udEF3ZXNvbWUpXHJcbiAgICAgKiBZb3UgY2FuIGFsc28gYWRkIGNvbG9yIGNsYXNzLCBleDogYGZhcyBmYS1oZWFydCB0ZXh0LXN1Y2Nlc3NgIChCb290c3RyYXAgY29sb3IgY2xhc3MpXHJcbiAgICAgKi9cclxuICAgIGljb25DbGFzcz86IHN0cmluZztcclxuXHJcbiAgICAvKiogQ2xhc3MgZm9yIHRpdGxlIGJsb2NrIG9mIHRvYXN0ICovXHJcbiAgICB0aXRsZUNsYXNzPzogc3RyaW5nO1xyXG5cclxuICAgIC8qKiBDbGFzcyBmb3IgYm9keSBibG9jayBvZiB0b2FzdCAqL1xyXG4gICAgYm9keUNsYXNzPzogc3RyaW5nO1xyXG5cclxuICAgIC8qKiBDbGFzcyBmb3IgYmxvY2sgb2YgdG9hc3QgKi9cclxuICAgIHRvYXN0Q2xhc3M/OiBzdHJpbmc7XHJcblxyXG4gICAgLyoqIENsYXNzIGZvciB0b29sYmFyIGJsb2NrICovXHJcbiAgICB0b29sYmFyQ2xhc3M/OiBzdHJpbmc7XHJcblxyXG4gICAgLyoqIENsYXNzIGZvciBjbG9zZSBidXR0b24gKi9cclxuICAgIGNsb3NlQnV0dG9uQ2xhc3M/OiBzdHJpbmc7XHJcblxyXG4gICAgLyoqIEJ1dHRvbnMgZm9yIHRvYXN0IHdpdGggdHlwZSBcImNvbmZpcm1cIiAqL1xyXG4gICAgdG9vbGJhckl0ZW1zPzogVG9hc3RUb29sYmFySXRlbXM7XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIFRvYXN0VHlwZSA9ICdzaW1wbGUnIHwgJ2NvbmZpcm0nO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTeXN0ZW1Ub2FzdFBhcmFtcyB7XHJcbiAgICBpZDogbnVtYmVyO1xyXG4gICAgdHlwZTogVG9hc3RUeXBlO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFRvYXN0VG9vbGJhckl0ZW1zIHtcclxuICAgIGFjdGlvbkJ1dHRvbjogVG9hc3RUb29sYmFyQnV0dG9uO1xyXG4gICAgY2FuY2VsQnV0dG9uOiBUb2FzdFRvb2xiYXJCdXR0b247XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVG9hc3RUb29sYmFyQnV0dG9uIHtcclxuICAgIHRleHQ6IHN0cmluZztcclxuICAgIHZpc2libGU/OiBib29sZWFuO1xyXG4gICAgY2xhc3M/OiBzdHJpbmc7XHJcbn1cclxuIl19