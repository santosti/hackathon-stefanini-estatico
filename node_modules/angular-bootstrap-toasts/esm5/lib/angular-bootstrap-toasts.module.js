/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { ToastsContainerComponent } from './Components/toasts-container/toasts-container.component';
import { ToastMessageComponent } from './Components/toast-message/toast-message.component';
import { AngularBootstrapToastsService } from './angular-bootstrap-toasts.service';
var AngularBootstrapToastsModule = /** @class */ (function () {
    function AngularBootstrapToastsModule() {
    }
    AngularBootstrapToastsModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        ToastsContainerComponent,
                        ToastMessageComponent
                    ],
                    imports: [
                        BrowserModule,
                        BrowserAnimationsModule
                    ],
                    exports: [
                        ToastsContainerComponent
                    ],
                    providers: [
                        AngularBootstrapToastsService
                    ]
                },] }
    ];
    return AngularBootstrapToastsModule;
}());
export { AngularBootstrapToastsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1ib290c3RyYXAtdG9hc3RzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItYm9vdHN0cmFwLXRvYXN0cy8iLCJzb3VyY2VzIjpbImxpYi9hbmd1bGFyLWJvb3RzdHJhcC10b2FzdHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUUvRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUNwRyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUMzRixPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUVuRjtJQUFBO0lBZ0I0QyxDQUFDOztnQkFoQjVDLFFBQVEsU0FBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osd0JBQXdCO3dCQUN4QixxQkFBcUI7cUJBQ3RCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxhQUFhO3dCQUNiLHVCQUF1QjtxQkFDeEI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLHdCQUF3QjtxQkFDekI7b0JBQ0QsU0FBUyxFQUFFO3dCQUNULDZCQUE2QjtxQkFDOUI7aUJBQ0Y7O0lBQzJDLG1DQUFDO0NBQUEsQUFoQjdDLElBZ0I2QztTQUFoQyw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBCcm93c2VyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcbmltcG9ydCB7IEJyb3dzZXJBbmltYXRpb25zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci9hbmltYXRpb25zJztcclxuXHJcbmltcG9ydCB7IFRvYXN0c0NvbnRhaW5lckNvbXBvbmVudCB9IGZyb20gJy4vQ29tcG9uZW50cy90b2FzdHMtY29udGFpbmVyL3RvYXN0cy1jb250YWluZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVG9hc3RNZXNzYWdlQ29tcG9uZW50IH0gZnJvbSAnLi9Db21wb25lbnRzL3RvYXN0LW1lc3NhZ2UvdG9hc3QtbWVzc2FnZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBBbmd1bGFyQm9vdHN0cmFwVG9hc3RzU2VydmljZSB9IGZyb20gJy4vYW5ndWxhci1ib290c3RyYXAtdG9hc3RzLnNlcnZpY2UnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIFRvYXN0c0NvbnRhaW5lckNvbXBvbmVudCxcclxuICAgIFRvYXN0TWVzc2FnZUNvbXBvbmVudFxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQnJvd3Nlck1vZHVsZSxcclxuICAgIEJyb3dzZXJBbmltYXRpb25zTW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBUb2FzdHNDb250YWluZXJDb21wb25lbnRcclxuICBdLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgQW5ndWxhckJvb3RzdHJhcFRvYXN0c1NlcnZpY2VcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBbmd1bGFyQm9vdHN0cmFwVG9hc3RzTW9kdWxlIHsgfVxyXG4iXX0=