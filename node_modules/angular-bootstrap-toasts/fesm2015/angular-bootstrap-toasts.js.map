{"version":3,"file":"angular-bootstrap-toasts.js.map","sources":["ng://angular-bootstrap-toasts/lib/Models/toast-message.models.ts","ng://angular-bootstrap-toasts/lib/angular-bootstrap-toasts.service.ts","ng://angular-bootstrap-toasts/lib/Components/toasts-container/toasts-container.component.ts","ng://angular-bootstrap-toasts/lib/Components/toast-message/toast-message.component.ts","ng://angular-bootstrap-toasts/lib/angular-bootstrap-toasts.module.ts"],"sourcesContent":["import { Subject, Observable } from 'rxjs';\r\n\r\nexport class ToastMessage {\r\n    private confirmationResult: Subject<boolean> = new Subject<boolean>();\r\n    public get ConfirmationResult$ (): Observable<boolean> {\r\n        return this.confirmationResult.asObservable();\r\n    }\r\n\r\n    private id: number;\r\n    public get Id (): number {\r\n        return this.id;\r\n    }\r\n\r\n    private type: ToastType;\r\n    public get Type (): ToastType {\r\n        return this.type;\r\n    }\r\n\r\n    private title: string;\r\n    public get Title (): string {\r\n        return this.title;\r\n    }\r\n\r\n    private text: string;\r\n    public get Text (): string {\r\n        return this.text;\r\n    }\r\n\r\n    private moment: string;\r\n    public get Moment (): string {\r\n        return this.moment;\r\n    }\r\n\r\n    private duration: number;\r\n    public get Duration (): number {\r\n        return this.duration;\r\n    }\r\n\r\n    private toolbarItems: ToastToolbarItems;\r\n    public get ToolbarItems (): ToastToolbarItems {\r\n        return this.toolbarItems;\r\n    }\r\n\r\n    private isProgressLineEnabled: boolean;\r\n    public get IsProgressLineEnabled (): boolean {\r\n        return this.isProgressLineEnabled;\r\n    }\r\n\r\n    private isDurationPausedByMouse: boolean;\r\n    public get IsDurationPausedByMouse (): boolean {\r\n        return this.isDurationPausedByMouse;\r\n    }\r\n\r\n    private isClosableByMouseClick: boolean;\r\n    public get IsClosableByMouseClick (): boolean {\r\n        return this.isClosableByMouseClick;\r\n    }\r\n\r\n    private iconClass: string;\r\n    public get IconClass (): string {\r\n        return this.iconClass;\r\n    }\r\n\r\n    private closeButtonClass: string;\r\n    public get CloseButtonClass (): string {\r\n        return this.closeButtonClass;\r\n    }\r\n\r\n    private progressLineClass: string;\r\n    public get ProgressLineClass (): string {\r\n        return this.progressLineClass;\r\n    }\r\n\r\n    private titleClass: string;\r\n    public get TitleClass (): string {\r\n        return this.titleClass;\r\n    }\r\n\r\n    private bodyClass: string;\r\n    public get BodyClass (): string {\r\n        return this.bodyClass;\r\n    }\r\n\r\n    private toolbarClass: string;\r\n    public get ToolbarClass (): string {\r\n        return this.toolbarClass;\r\n    }\r\n\r\n    private toastClass: string;\r\n    public get ToastClass (): string {\r\n        return this.toastClass;\r\n    }\r\n\r\n    public Close (confirmationStatus?: boolean) {\r\n        this.confirmationResult.next(confirmationStatus || false);\r\n    }\r\n\r\n    constructor (\r\n        params: ToastMessageParams,\r\n        systemParams: SystemToastParams\r\n    ) {\r\n        this.id                      = systemParams.id;\r\n        this.type                    = systemParams.type;\r\n        this.text                    = params.text;\r\n        this.title                   = params.title;\r\n        this.moment                  = params.moment;\r\n        this.duration                = params.duration;\r\n        this.isProgressLineEnabled   = params.showProgressLine;\r\n        this.isDurationPausedByMouse = params.pauseDurationOnMouseEnter;\r\n        this.isClosableByMouseClick  = params.closeByClick;\r\n        this.iconClass               = params.iconClass;\r\n        this.progressLineClass       = params.progressLineClass;\r\n        this.titleClass              = params.titleClass;\r\n        this.bodyClass               = params.bodyClass;\r\n        this.toastClass              = params.toastClass;\r\n        this.toolbarClass            = params.toolbarClass;\r\n        this.closeButtonClass        = params.closeButtonClass;\r\n        this.toolbarItems            = params.toolbarItems;\r\n    }\r\n}\r\n\r\nexport class ToastMessageParams {\r\n    text?: string;\r\n\r\n    title?: string;\r\n\r\n    /** Great property to show time/date or something like this (short info near title) */\r\n    moment?: string;\r\n\r\n    /** Time in milliseconds over which will be displayed toast  */\r\n    duration?: number;\r\n\r\n    /** Is toast will have progress line of duration time? */\r\n    showProgressLine?: boolean;\r\n\r\n    /** Is toast will closable by mouse click on toast block */\r\n    closeByClick?: boolean;\r\n\r\n    /** Is toast duration needs to be paused when mouse enter on toast block? */\r\n    pauseDurationOnMouseEnter?: boolean;\r\n\r\n    /** Class of progress line */\r\n    progressLineClass?: string;\r\n\r\n    /** Class of icon for title\r\n     * For example: `fas fa-heart` (FontAwesome)\r\n     * You can also add color class, ex: `fas fa-heart text-success` (Bootstrap color class)\r\n     */\r\n    iconClass?: string;\r\n\r\n    /** Class for title block of toast */\r\n    titleClass?: string;\r\n\r\n    /** Class for body block of toast */\r\n    bodyClass?: string;\r\n\r\n    /** Class for block of toast */\r\n    toastClass?: string;\r\n\r\n    /** Class for toolbar block */\r\n    toolbarClass?: string;\r\n\r\n    /** Class for close button */\r\n    closeButtonClass?: string;\r\n\r\n    /** Buttons for toast with type \"confirm\" */\r\n    toolbarItems?: ToastToolbarItems;\r\n}\r\n\r\nexport type ToastType = 'simple' | 'confirm';\r\n\r\nexport interface SystemToastParams {\r\n    id: number;\r\n    type: ToastType;\r\n}\r\n\r\nexport interface ToastToolbarItems {\r\n    actionButton: ToastToolbarButton;\r\n    cancelButton: ToastToolbarButton;\r\n}\r\n\r\nexport interface ToastToolbarButton {\r\n    text: string;\r\n    visible?: boolean;\r\n    class?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ToastMessage, ToastMessageParams, SystemToastParams } from './Models/toast-message.models';\r\n\r\n@Injectable()\r\nexport class AngularBootstrapToastsService {\r\n\r\n  private toastsList: BehaviorSubject<ToastMessage[]> = new BehaviorSubject<ToastMessage[]>([]);\r\n  public get ToastsList$ (): Observable<ToastMessage[]> {\r\n    return this.toastsList.asObservable();\r\n  }\r\n\r\n  private defaultTitle: string = 'Title';\r\n  public get DefaultTitle (): string {\r\n    return this.defaultTitle;\r\n  }\r\n\r\n  private defaultText: string = 'Message';\r\n  public get DefaultText (): string {\r\n    return this.defaultText;\r\n  }\r\n\r\n  private defaultDuration: number = 5000;\r\n  public get DefaultDuration (): number {\r\n    return this.defaultDuration;\r\n  }\r\n\r\n\r\n  private minDuration: number   = 300;\r\n  private maxMessageId: number  = 1;\r\n\r\n  constructor () {}\r\n\r\n  /** Show success toast message */\r\n  public showSimpleToast (params: ToastMessageParams): ToastMessage {\r\n    const systemParams: SystemToastParams = {\r\n      id: this.maxMessageId,\r\n      type: 'simple'\r\n    };\r\n\r\n    return this.createToast(params, systemParams);\r\n  }\r\n\r\n  /** Show toast message with confirmation and decline button variants */\r\n  public showConfirmToast (params: ToastMessageParams): ToastMessage {\r\n    const systemParams: SystemToastParams = {\r\n      id: this.maxMessageId,\r\n      type: 'confirm'\r\n    };\r\n\r\n    return this.createToast(params, systemParams);\r\n  }\r\n\r\n  /** Change Default **Title** for all toasts wich not get `title` property from params when creating */\r\n  public changeDefaultTitle (newTitle: string) {\r\n    const validTitle = this.validateTitle(newTitle);\r\n\r\n    if (validTitle) {\r\n      this.defaultTitle = validTitle;\r\n    }\r\n  }\r\n\r\n  /** Change Default **Text** for all toasts wich not get `text` property from params when creating */\r\n  public changeDefaultText (newText: string) {\r\n    const validText = this.validateText(newText);\r\n\r\n    if (validText) {\r\n      this.defaultText = validText;\r\n    }\r\n  }\r\n\r\n  /** Change Default **Duration** for all toasts */\r\n  public changeDefaultDuration (duration: number) {\r\n    const validDuration = this.validateDuration(duration);\r\n\r\n    if (validDuration) {\r\n      this.defaultDuration = duration;\r\n    }\r\n  }\r\n\r\n  private createToast (params: ToastMessageParams, systemParams: SystemToastParams): ToastMessage {\r\n    const messages    = this.toastsList.getValue();\r\n    const validParams = this.validateParams(params);\r\n    const toast       = new ToastMessage(validParams, systemParams);\r\n\r\n    messages.push(toast);\r\n\r\n    this.maxMessageId++;\r\n    this.toastsList.next(messages);\r\n\r\n    const toastSubscription = toast.ConfirmationResult$.subscribe(() => {\r\n      const actualMessages = this.toastsList.getValue();\r\n\r\n      for (const [index, message] of actualMessages.entries()) {\r\n        if (message.Id === toast.Id) {\r\n          actualMessages.splice(index, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.toastsList.next(actualMessages);\r\n\r\n      toastSubscription.unsubscribe();\r\n    });\r\n\r\n    return toast;\r\n  }\r\n\r\n  private validateParams (params: ToastMessageParams): ToastMessageParams {\r\n    const newParams = params;\r\n\r\n    try {\r\n      newParams.title = this.validateTitle(newParams.title);\r\n    } catch (err) {\r\n      newParams.title = this.DefaultTitle;\r\n    }\r\n\r\n    try {\r\n      newParams.text = this.validateText(newParams.text);\r\n    } catch (err) {\r\n      newParams.text = this.DefaultText;\r\n    }\r\n\r\n    try {\r\n      newParams.duration = this.validateDuration(newParams.duration);\r\n    } catch (err) {\r\n      newParams.duration = this.DefaultDuration;\r\n    }\r\n\r\n    return newParams;\r\n  }\r\n\r\n  private validateTitle (title: string) {\r\n    if (!title || typeof title !== 'string') {\r\n      throw new Error('Tost default title must be a string with length');\r\n    }\r\n\r\n    return title;\r\n  }\r\n\r\n  private validateText (text: string) {\r\n    if (!text || typeof text !== 'string') {\r\n      throw new Error('Tost default text must be a string with length');\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  private validateDuration (duration: number) {\r\n    const durationAsNumber: number = +duration;\r\n\r\n    if (isNaN(durationAsNumber)) {\r\n      throw new Error('Tost duration must be a number');\r\n    } else if (durationAsNumber < this.minDuration) {\r\n      throw new Error(`Tost duration must be more than ${this.minDuration} milliseconds`);\r\n    }\r\n\r\n    return durationAsNumber;\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { ToastMessage } from '../../Models/toast-message.models';\r\nimport { Subscription } from 'rxjs';\r\nimport { AngularBootstrapToastsService } from '../../angular-bootstrap-toasts.service';\r\nimport { PositionModel } from '../../Models/toast-container.models';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'Angular-Bootstrap-Toasts-Container',\r\n    templateUrl: './toasts-container.component.html',\r\n    styleUrls: [\r\n        './toasts-container.component.css'\r\n    ],\r\n    animations: [\r\n        trigger(\r\n          'enterAnimation', [\r\n            transition(':enter', [\r\n                style({ transform: 'translateX(100%)', opacity: 0 }),\r\n                animate('350ms ease', style({ transform: 'translateX(0)', opacity: 1 }))\r\n            ]),\r\n            transition(':leave', [\r\n                style({ transform: 'translateX(0)', opacity: 1 }),\r\n                animate('300ms ease', style({ transform: 'scale(0.1)', opacity: 0 }))\r\n            ])\r\n          ]\r\n        )\r\n    ]\r\n})\r\nexport class ToastsContainerComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() public Placement: PositionModel = {\r\n        position: 'topRight'\r\n    };\r\n\r\n    /** Width as CSS value */\r\n    @Input() public Width: string = '250px';\r\n\r\n    @Input() public Classes: string = '';\r\n\r\n    private defaultMargin: string = '15px';\r\n\r\n    public MarginAsString: string = '';\r\n    public toastsList: ToastMessage[] = [];\r\n\r\n    private messagesListSubscription: Subscription;\r\n\r\n    constructor (\r\n        private toastsService: AngularBootstrapToastsService\r\n    ) {}\r\n\r\n    ngOnInit () {\r\n        this.messagesListSubscription = this.toastsService.ToastsList$.subscribe(toasts => {\r\n            this.toastsList = toasts;\r\n        });\r\n\r\n        this.initParams();\r\n    }\r\n\r\n    ngOnDestroy () {\r\n        if (this.messagesListSubscription) {\r\n            this.messagesListSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private initParams () {\r\n        if (!this.Placement) {\r\n            this.Placement = {};\r\n        }\r\n\r\n        this.Placement.marginTop    = this.Placement.marginTop    || this.defaultMargin;\r\n        this.Placement.marginBottom = this.Placement.marginBottom || this.defaultMargin;\r\n        this.Placement.marginLeft   = this.Placement.marginLeft   || this.defaultMargin;\r\n        this.Placement.marginRight  = this.Placement.marginRight  || this.defaultMargin;\r\n\r\n        this.Placement.position     = this.Placement.position     || 'topRight';\r\n    }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { ToastMessage } from '../../Models/toast-message.models';\r\nimport { AngularBootstrapToastsService } from '../../angular-bootstrap-toasts.service';\r\nimport { filter, tap } from 'rxjs/operators';\r\nimport { interval, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'Toast-Message',\r\n    templateUrl: './toast-message.component.html',\r\n    styleUrls: [\r\n        './toast-message.component.css'\r\n    ]\r\n})\r\nexport class ToastMessageComponent implements OnInit, OnDestroy {\r\n    @Input() public Toast: ToastMessage;\r\n\r\n    public currentDuration: number;\r\n    public progressLineWidth: string = '100%';\r\n\r\n    private msInterval: number      = 10;\r\n    private isMouseFocused: boolean = false;\r\n    private durationTimer: Subscription;\r\n\r\n    constructor (\r\n        private toastsService: AngularBootstrapToastsService\r\n    ) {}\r\n\r\n    ngOnInit () {\r\n        this.currentDuration = this.Toast.Duration;\r\n\r\n        this.durationTimer = interval(this.msInterval).pipe(\r\n            filter(() => !this.isMouseFocused),\r\n            tap(() => {\r\n                this.currentDuration -= this.msInterval;\r\n\r\n                if (this.Toast.IsProgressLineEnabled) {\r\n                    this.progressLineWidth = (100 / this.Toast.Duration * this.currentDuration).toFixed(0) + '%';\r\n                }\r\n\r\n                if (this.currentDuration <= 0) {\r\n                    this.Toast.Close();\r\n                }\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n    ngOnDestroy () {\r\n        if (this.durationTimer) {\r\n            this.durationTimer.unsubscribe();\r\n        }\r\n    }\r\n\r\n    public animationPause () {\r\n        this.isMouseFocused = true;\r\n    }\r\n\r\n    public animationPlay () {\r\n        this.isMouseFocused = false;\r\n    }\r\n\r\n    public onClick () {\r\n        if (this.Toast.IsClosableByMouseClick) {\r\n            this.Toast.Close(false);\r\n        }\r\n    }\r\n\r\n    public remove (confirmationResult?: boolean) {\r\n        this.Toast.Close(confirmationResult || false);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ToastsContainerComponent } from './Components/toasts-container/toasts-container.component';\r\nimport { ToastMessageComponent } from './Components/toast-message/toast-message.component';\r\nimport { AngularBootstrapToastsService } from './angular-bootstrap-toasts.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ToastsContainerComponent,\r\n    ToastMessageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  exports: [\r\n    ToastsContainerComponent\r\n  ],\r\n  providers: [\r\n    AngularBootstrapToastsService\r\n  ]\r\n})\r\nexport class AngularBootstrapToastsModule { }\r\n"],"names":[],"mappings":"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"}
