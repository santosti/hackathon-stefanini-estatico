import { Observable } from 'rxjs';
export declare class ToastMessage {
    private confirmationResult;
    readonly ConfirmationResult$: Observable<boolean>;
    private id;
    readonly Id: number;
    private type;
    readonly Type: ToastType;
    private title;
    readonly Title: string;
    private text;
    readonly Text: string;
    private moment;
    readonly Moment: string;
    private duration;
    readonly Duration: number;
    private toolbarItems;
    readonly ToolbarItems: ToastToolbarItems;
    private isProgressLineEnabled;
    readonly IsProgressLineEnabled: boolean;
    private isDurationPausedByMouse;
    readonly IsDurationPausedByMouse: boolean;
    private isClosableByMouseClick;
    readonly IsClosableByMouseClick: boolean;
    private iconClass;
    readonly IconClass: string;
    private closeButtonClass;
    readonly CloseButtonClass: string;
    private progressLineClass;
    readonly ProgressLineClass: string;
    private titleClass;
    readonly TitleClass: string;
    private bodyClass;
    readonly BodyClass: string;
    private toolbarClass;
    readonly ToolbarClass: string;
    private toastClass;
    readonly ToastClass: string;
    Close(confirmationStatus?: boolean): void;
    constructor(params: ToastMessageParams, systemParams: SystemToastParams);
}
export declare class ToastMessageParams {
    text?: string;
    title?: string;
    /** Great property to show time/date or something like this (short info near title) */
    moment?: string;
    /** Time in milliseconds over which will be displayed toast  */
    duration?: number;
    /** Is toast will have progress line of duration time? */
    showProgressLine?: boolean;
    /** Is toast will closable by mouse click on toast block */
    closeByClick?: boolean;
    /** Is toast duration needs to be paused when mouse enter on toast block? */
    pauseDurationOnMouseEnter?: boolean;
    /** Class of progress line */
    progressLineClass?: string;
    /** Class of icon for title
     * For example: `fas fa-heart` (FontAwesome)
     * You can also add color class, ex: `fas fa-heart text-success` (Bootstrap color class)
     */
    iconClass?: string;
    /** Class for title block of toast */
    titleClass?: string;
    /** Class for body block of toast */
    bodyClass?: string;
    /** Class for block of toast */
    toastClass?: string;
    /** Class for toolbar block */
    toolbarClass?: string;
    /** Class for close button */
    closeButtonClass?: string;
    /** Buttons for toast with type "confirm" */
    toolbarItems?: ToastToolbarItems;
}
export declare type ToastType = 'simple' | 'confirm';
export interface SystemToastParams {
    id: number;
    type: ToastType;
}
export interface ToastToolbarItems {
    actionButton: ToastToolbarButton;
    cancelButton: ToastToolbarButton;
}
export interface ToastToolbarButton {
    text: string;
    visible?: boolean;
    class?: string;
}
